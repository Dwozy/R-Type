cmake_minimum_required(VERSION "3.16.3")

set(PROJECT_NAME "GameEngine")

# FOR STATIC LIBRARY
set(LIBRARY_NAME "libGameEngine")

set(INCLUDES include)
set(SRCS
    src/Error.cpp
)

project(${PROJECT_NAME})
set(CMAKE_CXX_STANDARD 20)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR})

# FOR STATIC LIBRARY
add_library(${PROJECT_NAME} STATIC ${SRCS})
target_include_directories(${PROJECT_NAME} PRIVATE ${INCLUDES})
file(COPY ${INCLUDES}/ DESTINATION ${CMAKE_SOURCE_DIR}/${PROJECT_NAME})
target_link_libraries(${PROJECT_NAME} ${CMAKE_SOURCE_DIR}/${LIBRARY_NAME})

# FOR BINARY
# add_executable(${PROJECT_NAME} ${SRCS})
# target_include_directories(${PROJECT_NAME} PUBLIC ${INCLUDES})
